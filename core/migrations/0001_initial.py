# Generated by Django 5.2 on 2025-08-06 19:56

import core.models
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cor', models.CharField(max_length=7)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Formulario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField()),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=8)),
                ('qtd_sessoes', models.PositiveIntegerField(default=1)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo', models.CharField(choices=[('admin', 'Administrador'), ('secretaria', 'Secretaria'), ('recepcionista', 'Recepcionista'), ('profissional', 'Profissional'), ('gerente', 'Gerente'), ('financeiro', 'Financeiro'), ('coordenador', 'Coordenador Clínico'), ('supervisor', 'Supervisor'), ('estagiario', 'Estagiário'), ('suporte', 'Suporte Técnico')], max_length=20)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LogAcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=50)),
                ('modelo', models.CharField(max_length=100)),
                ('objeto_id', models.CharField(max_length=50)),
                ('descricao', models.TextField(blank=True)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('sobrenome', models.CharField(blank=True, max_length=150, null=True)),
                ('nomeSocial', models.CharField(blank=True, default='Não informado', max_length=100)),
                ('rg', models.CharField(blank=True, max_length=12, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('cor_raca', models.CharField(blank=True, choices=[('branca', 'Branca'), ('preta', 'Preta'), ('parda', 'Parda'), ('amarela', 'Amarela'), ('indígena', 'Indígena'), ('prefiro não informar', 'Prefiro não informar')], default='Não informado', max_length=20, null=True)),
                ('sexo', models.CharField(choices=[('masculino', 'Masculino'), ('feminino', 'Feminino'), ('outro', 'Outro'), ('prefiro não informar', 'Prefiro não informar')], default='Não informado', max_length=20)),
                ('estado_civil', models.CharField(choices=[('solteiro(a)', 'Solteiro(a)'), ('casado(a)', 'Casado(a)'), ('divorciado(a)', 'Divorciado(a)'), ('viuvo(a))', 'Viúvo(a)'), ('uniao estavel', 'União estável')], default='Não informado', max_length=20)),
                ('profissao', models.CharField(default='Não informado', max_length=35)),
                ('naturalidade', models.CharField(max_length=50)),
                ('uf', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=50)),
                ('midia', models.CharField(choices=[('indicacao', 'Indicação'), ('redes_sociais', 'Redes Sociais (Instagram, Facebook etc.)'), ('google_site', 'Google / Site'), ('outdoor_panfleto', 'Outdoor / Panfleto'), ('evento', 'Evento'), ('tv_radio', 'TV / Rádio'), ('whatsapp', 'WhatsApp'), ('outro', 'Outro')], max_length=30)),
                ('redeSocial', models.CharField(default='Não informado', max_length=35)),
                ('foto', models.ImageField(blank=True, null=True, upload_to=core.models.caminho_foto_paciente)),
                ('observacao', models.TextField(blank=True, max_length=5000, null=True)),
                ('cep', models.CharField(blank=True, max_length=10, null=True)),
                ('rua', models.TextField(blank=True, max_length=255, null=True)),
                ('numero', models.TextField(blank=True, max_length=10, null=True)),
                ('complemento', models.TextField(blank=True, max_length=100, null=True)),
                ('bairro', models.TextField(blank=True, max_length=100, null=True)),
                ('cidade', models.TextField(blank=True, max_length=100, null=True)),
                ('estado', models.TextField(blank=True, max_length=100, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('celular', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('nomeEmergencia', models.CharField(max_length=100)),
                ('vinculo', models.CharField(choices=[('pai', 'Pai'), ('mae', 'Mãe'), ('padrasto', 'Padrasto'), ('madrasta', 'Madrasta'), ('filho_filha', 'Filho(a)'), ('irmao_irma', 'Irmão(ã)'), ('avo_avó', 'Avô(ó)'), ('neto_neta', 'Neto(a)'), ('tio_tia', 'Tio(a)'), ('primo_prima', 'Primo(a)'), ('sobrinho_sobrinha', 'Sobrinho(a)'), ('cunhado_cunhada', 'Cunhado(a)'), ('genro_nora', 'Genro/Nora'), ('sogro_sogra', 'Sogro(a)'), ('marido_esposa', 'Marido/Esposa'), ('companheiro_companheira', 'Companheiro(a)'), ('namorado_namorada', 'Namorado(a)'), ('amigo_amiga', 'Amigo(a)'), ('vizinho_vizinha', 'Vizinho(a)'), ('colega_trabalho', 'Colega de trabalho'), ('outro', 'Outro')], max_length=100)),
                ('telEmergencia', models.CharField(blank=True, max_length=20, null=True)),
                ('data_cadastro', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('pre_cadastro', models.BooleanField(default=False)),
                ('conferido', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LinkFormularioPaciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.formulario')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='PacotePaciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(editable=False, max_length=12, unique=True)),
                ('qtd_sessoes', models.PositiveIntegerField()),
                ('valor_original', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('desconto_reais', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('desconto_percentual', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('valor_final', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('tipo_reposicao', models.CharField(blank=True, choices=[('d', 'Reposição D'), ('dcr', 'Reposição DCR'), ('fcr', 'Reposição FCR')], help_text='Tipo de reposição, se for um pacote de reposição', max_length=3, null=True)),
                ('data_inicio', models.DateField(default=django.utils.timezone.now)),
                ('ativo', models.BooleanField(default=True)),
                ('eh_reposicao', models.BooleanField(default=False)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
                ('hora_inicio_aux', models.TimeField(blank=True, null=True)),
                ('hora_fim_aux', models.TimeField(blank=True, null=True)),
                ('ambiente', models.CharField(blank=True, max_length=100)),
                ('observacoes', models.TextField(blank=True)),
                ('observacao_data', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pre', '✅ Pré-Agendado'), ('agendado', '✅ Agendado'), ('finalizado', '✅ Consulta finalizada!'), ('desistencia', '❌ D - Desmarcação'), ('desistencia_remarcacao', '⚠️ DCR - Desmarcação com reposição'), ('falta_remarcacao', '⚠️ FCR - Falta com reposição'), ('falta_cobrada', '❌ FC - Falta cobrada')], default='agendado', max_length=30)),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('foi_reposto', models.BooleanField(default=False)),
                ('observacao_autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observacoes', to=settings.AUTH_USER_MODEL)),
                ('especialidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.especialidade')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
                ('pacote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pacotepaciente')),
            ],
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=8)),
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
                ('forma_pagamento', models.CharField(choices=[('pix', 'Pix'), ('credito', 'Cartão de Crédito'), ('debito', 'Cartão de Débito'), ('dinheiro', 'Dinheiro')], max_length=30)),
                ('agendamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.agendamento')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
                ('pacote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pacotepaciente')),
            ],
        ),
        migrations.CreateModel(
            name='Pendencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('resolvido', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vinculado_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=500)),
                ('tipo', models.CharField(choices=[('short-text', 'Texto Curto'), ('paragraph', 'Parágrafo'), ('multiple-choice', 'Múltipla Escolha'), ('checkbox', 'Checkbox'), ('dropdown', 'Dropdown')], max_length=20)),
                ('obrigatoria', models.BooleanField(default=False)),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perguntas', to='core.formulario')),
            ],
        ),
        migrations.CreateModel(
            name='OpcaoResposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=255)),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opcoes', to='core.pergunta')),
            ],
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('sobrenome', models.CharField(blank=True, max_length=150, null=True)),
                ('nomeSocial', models.CharField(blank=True, default='Não informado', max_length=100)),
                ('rg', models.CharField(blank=True, max_length=12, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('cor_raca', models.CharField(choices=[('branca', 'Branca'), ('preta', 'Preta'), ('parda', 'Parda'), ('amarela', 'Amarela'), ('indígena', 'Indígena'), ('prefiro não informar', 'Prefiro não informar')], default='Não informado', max_length=20)),
                ('sexo', models.CharField(choices=[('masculino', 'Masculino'), ('feminino', 'Feminino'), ('outro', 'Outro'), ('prefiro não informar', 'Prefiro não informar')], default='Não informado', max_length=20)),
                ('estado_civil', models.CharField(choices=[('solteiro(a)', 'Solteiro(a)'), ('casado(a)', 'Casado(a)'), ('divorciado(a)', 'Divorciado(a)'), ('viuvo(a))', 'Viúvo(a)'), ('uniao estavel', 'União estável')], default='Não informado', max_length=20)),
                ('naturalidade', models.CharField(max_length=50)),
                ('uf', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=50)),
                ('conselho1', models.CharField(blank=True, choices=[('cref', 'CREF'), ('crefito', 'CREFITO'), ('cfn', 'CFN'), ('crbm', 'CRBM'), ('coren', 'COREN'), ('cra', 'CRA')], max_length=20, null=True)),
                ('num1_conselho', models.CharField(blank=True, max_length=20, null=True)),
                ('conselho2', models.CharField(blank=True, choices=[('cref', 'CREF'), ('crefito', 'CREFITO'), ('cfn', 'CFN'), ('crbm', 'CRBM'), ('coren', 'COREN'), ('cra', 'CRA')], max_length=20, null=True)),
                ('num2_conselho', models.CharField(blank=True, max_length=20, null=True)),
                ('conselho3', models.CharField(blank=True, choices=[('cref', 'CREF'), ('crefito', 'CREFITO'), ('cfn', 'CFN'), ('crbm', 'CRBM'), ('coren', 'COREN'), ('cra', 'CRA')], max_length=20, null=True)),
                ('num3_conselho', models.CharField(blank=True, max_length=20, null=True)),
                ('conselho4', models.CharField(blank=True, choices=[('cref', 'CREF'), ('crefito', 'CREFITO'), ('cfn', 'CFN'), ('crbm', 'CRBM'), ('coren', 'COREN'), ('cra', 'CRA')], max_length=20, null=True)),
                ('num4_conselho', models.CharField(blank=True, max_length=20, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to=core.models.caminho_foto_profissional)),
                ('observacao', models.TextField(max_length=5000, null=True)),
                ('redeSocial', models.CharField(default='Não informado', max_length=35)),
                ('cep', models.CharField(blank=True, max_length=10, null=True)),
                ('rua', models.TextField(blank=True, max_length=255, null=True)),
                ('numero', models.TextField(blank=True, max_length=10, null=True)),
                ('complemento', models.TextField(blank=True, max_length=100, null=True)),
                ('bairro', models.TextField(blank=True, max_length=100, null=True)),
                ('cidade', models.TextField(blank=True, max_length=100, null=True)),
                ('estado', models.TextField(blank=True, max_length=100, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('celular', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('nomeEmergencia', models.CharField(max_length=100)),
                ('vinculo', models.CharField(choices=[('pai', 'Pai'), ('mae', 'Mãe'), ('padrasto', 'Padrasto'), ('madrasta', 'Madrasta'), ('filho_filha', 'Filho(a)'), ('irmao_irma', 'Irmão(ã)'), ('avo_avó', 'Avô(ó)'), ('neto_neta', 'Neto(a)'), ('tio_tia', 'Tio(a)'), ('primo_prima', 'Primo(a)'), ('sobrinho_sobrinha', 'Sobrinho(a)'), ('cunhado_cunhada', 'Cunhado(a)'), ('genro_nora', 'Genro/Nora'), ('sogro_sogra', 'Sogro(a)'), ('marido_esposa', 'Marido/Esposa'), ('companheiro_companheira', 'Companheiro(a)'), ('namorado_namorada', 'Namorado(a)'), ('amigo_amiga', 'Amigo(a)'), ('vizinho_vizinha', 'Vizinho(a)'), ('colega_trabalho', 'Colega de trabalho'), ('outro', 'Outro')], max_length=100)),
                ('telEmergencia', models.CharField(blank=True, max_length=20, null=True)),
                ('valor_hora', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('data_cadastro', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('especialidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.especialidade')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pacotepaciente',
            name='profissional',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.profissional'),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='profissional_1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='principal', to='core.profissional'),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='profissional_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auxiliar', to='core.profissional'),
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(editable=False, max_length=32, unique=True)),
                ('data_resposta', models.DateTimeField(auto_now_add=True)),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.formulario')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='RespostaFormulario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enviado_em', models.DateTimeField(auto_now_add=True)),
                ('formulario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.formulario')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
            ],
        ),
        migrations.AddField(
            model_name='pacotepaciente',
            name='servico',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.servico'),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='servico',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.servico'),
        ),
    ]
